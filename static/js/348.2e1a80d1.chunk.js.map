{"version":3,"file":"static/js/348.2e1a80d1.chunk.js","mappings":"2NAgBMA,EAAuB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAC5BC,GAAO,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAR,EAAAA,EAAAA,KAAAS,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEE,OADTR,EAAMG,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAG,EACTF,EAAKE,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAG,EAACG,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGaG,EAAAA,EAAAA,IAAY,cAADC,OACXb,EAAO,aACrB,CACIc,OAAQ,MACRC,OAAQ,CACJd,OAAQA,EACRC,MAAOA,KAGjB,KAAD,EATQ,OAAHC,EAAGI,EAAAS,KAAAT,EAAAU,OAAA,SAUFd,EAAIe,MAAI,OAAAX,EAAAC,KAAA,EAAAD,EAAAY,GAAAZ,EAAA,SAEfa,QAAQC,IAAGd,EAAAY,IAAQ,yBAAAZ,EAAAe,OAAA,GAAAvB,EAAA,kBAE1B,gBApB4BwB,GAAA,OAAA5B,EAAA6B,MAAA,KAAAnB,UAAA,KAsB7B,I,kBC/BMoB,EAAKC,IAAAA,KCNX,CAAgB,QAAU,+BD0C1B,EAlCoB,SAAH/B,GAAqC,IAA/BgC,EAAahC,EAAbgC,cAAeC,EAAQjC,EAARiC,SAClCC,GAIIC,EAAAA,EAAAA,YAAWC,EAAAA,GAHXC,EAAkBH,EAAlBG,mBACAC,EAAWJ,EAAXI,YACAC,EAAcL,EAAdK,eAMEC,EAAyB,eAAAC,GAAAxC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAI,EAAA,OAAAN,EAAAA,EAAAA,KAAAS,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACZ,OAAlByB,EAAe,GAAG3B,EAAAE,KAAA,EACAf,EACdiC,EAAcU,GACdJ,GACF,KAAD,EAHK9B,EAAGI,EAAAS,KAITgB,EAAmB7B,GACfA,EAAIO,OAAS,GACb4B,aAAaC,QACT,kBACAC,KAAKC,UAAUtC,IAEtB,wBAAAI,EAAAe,OAAA,GAAAvB,EAAA,KACJ,kBAb8B,OAAAqC,EAAAZ,MAAA,KAAAnB,UAAA,KAc/B,OACIqC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CACDC,GAAE,uBAAA/B,OAAyBc,EAAckB,MACzCC,QAASX,EAA0BP,UAEnCc,EAAAA,EAAAA,KAAA,OAAKK,UAAWtB,EAAG,WAAWG,SAAEA,KAG5C,C","sources":["services/getProductFromCatergory.js","components/Catergories/Catergories.js","webpack://e-shop/./src/components/Catergories/Catergories.module.scss?7f7c"],"sourcesContent":["import { request } from '../utils/httpRequest';\r\n\r\n/**\r\n * This is an asynchronous function that retrieves products from a specific category with optional\r\n * parameters for offset and limit.\r\n * @param caterId - The ID of the category from which you want to retrieve products.\r\n * @param [offset=0] - The starting index of the products to be returned from the category. It is an\r\n * optional parameter and its default value is 0.\r\n * @param [limit=0] - The limit parameter is used to specify the maximum number of products to be\r\n * returned in the response. If not specified, it defaults to 0, which means that all products in the\r\n * category will be returned.\r\n * @returns The function `getProductFromCatergory` is returning the data obtained from a GET request to\r\n * the endpoint `categories//products`, with optional parameters `offset` and `limit`. The\r\n * data is returned as a Promise, which resolves to the response data if the request is successful, or\r\n * logs an error to the console if the request fails.\r\n */\r\nconst getProductFromCatergory = async (\r\n    caterId,\r\n    offset = 0,\r\n    limit = 0,\r\n) => {\r\n    try {\r\n        const res = await request.get(\r\n            `categories/${caterId}/products`,\r\n            {\r\n                method: 'GET',\r\n                params: {\r\n                    offset: offset,\r\n                    limit: limit,\r\n                },\r\n            },\r\n        );\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport default getProductFromCatergory;\r\n","import React, { useContext } from 'react';\r\nimport classNames from 'classnames/bind';\r\nimport styles from './Catergories.module.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport getProductFromCatergory from '../../services/getProductFromCatergory';\r\nimport { AppContext } from '../../context/AppProvider';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Catergories = ({ catergoryData, children }) => {\r\n    const {\r\n        setSearchAllResult,\r\n        currentPage,\r\n        setCurrentPage,\r\n    } = useContext(AppContext);\r\n    /**\r\n     * This function sets the current page to 1, retrieves products from a category using an API call,\r\n     * sets the search results to the retrieved products, and saves the results to local storage if there are any.\r\n     */\r\n    const handlegetPrdFromCatergory = async () => {\r\n        setCurrentPage(1);\r\n        const res = await getProductFromCatergory(\r\n            catergoryData.id,\r\n            currentPage,\r\n        );\r\n        setSearchAllResult(res);\r\n        if (res.length > 0) {\r\n            localStorage.setItem(\r\n                'searchAllResult',\r\n                JSON.stringify(res),\r\n            );\r\n        }\r\n    };\r\n    return (\r\n        <Link\r\n            to={`/search/catergoryId=${catergoryData.name}`}\r\n            onClick={handlegetPrdFromCatergory}\r\n        >\r\n            <div className={cx('wrapper')}>{children}</div>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default Catergories;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Catergories_wrapper__IVWDB\"};"],"names":["getProductFromCatergory","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","caterId","offset","limit","res","_args","arguments","wrap","_context","prev","next","length","undefined","request","concat","method","params","sent","abrupt","data","t0","console","log","stop","_x","apply","cx","classNames","catergoryData","children","_useContext","useContext","AppContext","setSearchAllResult","currentPage","setCurrentPage","handlegetPrdFromCatergory","_ref2","id","localStorage","setItem","JSON","stringify","_jsx","Link","to","name","onClick","className"],"sourceRoot":""}