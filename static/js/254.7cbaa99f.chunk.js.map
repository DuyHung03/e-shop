{"version":3,"file":"static/js/254.7cbaa99f.chunk.js","mappings":"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","sources":["components/Button/Button.js","webpack://e-shop/./src/components/Button/Button.module.scss?f17a","pages/auth/SignUpForm/SignUpForm.js","webpack://e-shop/./src/pages/auth/SignUpForm/SignUpForm.module.scss?e929"],"sourcesContent":["import classNames from 'classnames/bind';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport styles from './Button.module.scss';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Button = ({\r\n    //*SIZE\r\n    //*TYPES\r\n    actionType,\r\n    menuType,\r\n    disable,\r\n    //*\r\n    leftIcon,\r\n    rightIcon,\r\n    className,\r\n    id,\r\n    to = false,\r\n    href = false,\r\n    target,\r\n    onClick,\r\n    children,\r\n    ...passProps\r\n}) => {\r\n    /* `const classes = cx()` is using the `classnames` library to generate a string of CSS class names\r\n    based on the provided arguments. In this case, it is combining the string `'wrapper'` with an\r\n    object containing the boolean values of `leftIcon`, `rightIcon`, `actionType`, and `menuType`,\r\n    as well as any additional `className` passed in as a prop. The resulting string of class names\r\n    is then used to apply styles to the button element. */\r\n    const classes = cx(\r\n        'wrapper',\r\n        {\r\n            leftIcon,\r\n            rightIcon,\r\n            actionType,\r\n            menuType,\r\n            disable,\r\n        },\r\n        className,\r\n    );\r\n\r\n    /* `const props = { ...passProps, onClick };` is creating a new object called `props` that includes\r\n    all the properties passed to the `Button` component via the `passProps` object, as well as an\r\n    `onClick` property. */\r\n    const props = { ...passProps, onClick };\r\n\r\n    /* This code block is determining what type of HTML element the `Btn` variable should be set to\r\n    based on the props passed to the `Button` component. */\r\n    let Btn = 'button';\r\n    if (to) {\r\n        props.to = to;\r\n        Btn = Link;\r\n    } else if (href) {\r\n        props.href = href;\r\n        Btn = 'a';\r\n        props.target = target;\r\n    }\r\n\r\n    return (\r\n        <Btn\r\n            id={id}\r\n            className={classes}\r\n            {...props}\r\n            type=\"submit\"\r\n            disabled={disable}\r\n        >\r\n            {leftIcon && (\r\n                <span className={cx('icon')}>\r\n                    {leftIcon}\r\n                </span>\r\n            )}\r\n            <span className={cx('title')}>{children}</span>\r\n            {rightIcon && (\r\n                <span className={cx('icon')}>\r\n                    {rightIcon}\r\n                </span>\r\n            )}\r\n        </Btn>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Button_wrapper__s+M1Y\",\"icon\":\"Button_icon__nNGpV\",\"title\":\"Button_title__9sGjw\",\"actionType\":\"Button_actionType__gLpKP\",\"menuType\":\"Button_menuType__GDKhN\",\"disable\":\"Button_disable__wiVZU\"};","import React, { useContext } from 'react';\r\nimport styles from './SignUpForm.module.scss';\r\nimport validator from 'validator';\r\nimport classNames from 'classnames/bind';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRightToBracket } from '@fortawesome/free-solid-svg-icons';\r\nimport Button from '../../../components/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../../context/AuthProvider';\r\nimport {\r\n    createUserWithEmailAndPassword,\r\n    updateProfile,\r\n} from 'firebase/auth';\r\nimport { auth } from '../../../firebase/firebase';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst SignUpForm = () => {\r\n    const {\r\n        setEmail,\r\n        setPassword,\r\n        setName,\r\n        email,\r\n        password,\r\n        name,\r\n        navigate,\r\n    } = useContext(AuthContext);\r\n\r\n    const handleEmail = (e) => {\r\n        const email = e.target.value;\r\n        e.preventDefault();\r\n        setEmail(validator.trim(email));\r\n    };\r\n\r\n    const handlePassword = (e) => {\r\n        const password = e.target.value;\r\n        e.preventDefault();\r\n        setPassword(validator.trim(password));\r\n    };\r\n    const handleName = (e) => {\r\n        const name = e.target.value;\r\n        if (!name.startsWith(' ')) {\r\n            setName(name);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This function creates a user account with email and password, and updates the user's display\r\n     * name before navigating to the login page.\r\n     */\r\n    const handleCreateAccountWithEmail = () => {\r\n        if ((email, password, name)) {\r\n            createUserWithEmailAndPassword(\r\n                auth,\r\n                email,\r\n                password,\r\n            )\r\n                .then((userCredential) => {\r\n                    updateProfile(userCredential.user, {\r\n                        displayName: name,\r\n                    });\r\n                    navigate('/login');\r\n                })\r\n\r\n                .catch((error) => {\r\n                    alert(error);\r\n                    console.log('Loi', error);\r\n                });\r\n        } else {\r\n            alert('Error Empty Infomations');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={cx('wrapper')}>\r\n            <form className={cx('form-section')}>\r\n                <label>\r\n                    Email:\r\n                    <input\r\n                        required\r\n                        value={email}\r\n                        type=\"email\"\r\n                        onChange={handleEmail}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Name:\r\n                    <input\r\n                        required\r\n                        value={name}\r\n                        type=\"text\"\r\n                        onChange={handleName}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Password:\r\n                    <input\r\n                        required\r\n                        maxLength={25}\r\n                        value={password}\r\n                        type=\"password\"\r\n                        onChange={handlePassword}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Confirm Password:\r\n                    <input\r\n                        required\r\n                        maxLength={25}\r\n                        value={password}\r\n                        type=\"password\"\r\n                        onChange={handlePassword}\r\n                    />\r\n                </label>\r\n                <Button\r\n                    onClick={handleCreateAccountWithEmail}\r\n                    className={cx('sign-up-btn')}\r\n                    leftIcon={\r\n                        <FontAwesomeIcon\r\n                            icon={faRightToBracket}\r\n                        />\r\n                    }\r\n                >\r\n                    Sign Up\r\n                </Button>\r\n            </form>\r\n\r\n            <Link to=\"/login\">Already have account ?</Link>\r\n        </div>\r\n    );\r\n};\r\nexport default SignUpForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SignUpForm_wrapper__myh4v\",\"form-section\":\"SignUpForm_form-section__j6f+8\",\"sign-up-btn\":\"SignUpForm_sign-up-btn__q3MZT\"};"],"names":["cx","classNames","_ref","actionType","menuType","disable","leftIcon","rightIcon","className","id","_ref$to","to","_ref$href","href","target","onClick","children","passProps","_objectWithoutProperties","_excluded","classes","props","_objectSpread","Btn","Link","_jsxs","type","disabled","_jsx","_useContext","useContext","AuthContext","setEmail","setPassword","setName","email","password","name","navigate","handlePassword","e","value","preventDefault","validator","required","onChange","startsWith","maxLength","Button","createUserWithEmailAndPassword","auth","then","userCredential","updateProfile","user","displayName","catch","error","alert","console","log","FontAwesomeIcon","icon","faRightToBracket"],"sourceRoot":""}